// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Platform.Data;

namespace WebAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190510195604_AddedAdminFlag")]
    partial class AddedAdminFlag
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Platform.Models.MedicalComissionResults", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ComissionDate");

                    b.Property<long>("RecruitId");

                    b.Property<byte>("Suitability");

                    b.HasKey("Id");

                    b.HasIndex("RecruitId");

                    b.ToTable("MedicalComissionResults");
                });

            modelBuilder.Entity("Platform.Models.Recruit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("FullName")
                        .IsRequired();

                    b.Property<string>("MaritalStatus")
                        .IsRequired();

                    b.Property<string>("PathToPhoto")
                        .IsRequired();

                    b.Property<DateTime>("RecruitmentDate");

                    b.Property<long?>("RecruitmentOfficeId");

                    b.Property<long?>("TroopTypeId");

                    b.HasKey("Id");

                    b.HasIndex("RecruitmentOfficeId");

                    b.HasIndex("TroopTypeId");

                    b.ToTable("Recruits");
                });

            modelBuilder.Entity("Platform.Models.RecruitmentOffice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<string>("ChiefFullName")
                        .IsRequired();

                    b.Property<string>("OfficeNo")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("RecruitmentOffices");
                });

            modelBuilder.Entity("Platform.Models.Schedule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DayOfWeek");

                    b.Property<string>("EndDate")
                        .IsRequired();

                    b.Property<long>("RecruitmentOfficeId");

                    b.Property<string>("StartDate")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RecruitmentOfficeId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("Platform.Models.TroopKind", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("TroopKinds");
                });

            modelBuilder.Entity("Platform.Models.TroopType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<long>("TroopKindId");

                    b.HasKey("Id");

                    b.HasIndex("TroopKindId");

                    b.ToTable("TroopTypes");
                });

            modelBuilder.Entity("Platform.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<bool>("IsAdmin");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("MiddleName")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("UserName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Platform.Models.MedicalComissionResults", b =>
                {
                    b.HasOne("Platform.Models.Recruit", "Recruit")
                        .WithMany("MedicalComissionResults")
                        .HasForeignKey("RecruitId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Platform.Models.Recruit", b =>
                {
                    b.HasOne("Platform.Models.RecruitmentOffice", "RecruitmentOffice")
                        .WithMany()
                        .HasForeignKey("RecruitmentOfficeId");

                    b.HasOne("Platform.Models.TroopType", "TroopType")
                        .WithMany()
                        .HasForeignKey("TroopTypeId");
                });

            modelBuilder.Entity("Platform.Models.Schedule", b =>
                {
                    b.HasOne("Platform.Models.RecruitmentOffice", "RecruitmentOffice")
                        .WithMany("Schedule")
                        .HasForeignKey("RecruitmentOfficeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Platform.Models.TroopType", b =>
                {
                    b.HasOne("Platform.Models.TroopKind", "TroopKind")
                        .WithMany("TroopTypes")
                        .HasForeignKey("TroopKindId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
